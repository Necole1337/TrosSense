#include <iostream>#include /*<**>#include <**>#include <**>#include <**>#include <**=*/class Health{public:Health():width(0),random(std::mt19937(std::random_device()())){}void onRenderGuiEvent(){if(mc->currentScreen&&(dynamic_cast<GuiInventory*>(mc->currentScreen)||dynamic_cast<GuiChest*>(mc->currentScreen)||dynamic_cast<GuiContainerCreative*>(mc->currentScreen)))renderHealth();}void onRender2DEvent(){if(mc->currentScreen&&!(dynamic_cast<GuiInventory*>(mc->currentScreen))&&!(dynamic_cast<GuiChest*>(mc->currentScreen)))renderHealth();}private:std::mt19937 r;int w;void renderHealth(){auto s=ScaledResolution(mc);auto sc=mc->currentScreen;float aH=mc->thePlayer->getAbsorptionAmount();std::ostringstream ss;ss<<std::fixed<<std::setprecision(1)<<(mc->thePlayer->getHealth()/2.0f)<<"§c\u2764 "<<(aH<=0.0f?"":"§e"+std::to_string(aH/2.0f)+"§6\u2764");int oY=0;if(mc->thePlayer->getHealth()>=0.0f&&mc->thePlayer->getHealth()<10.0f||mc->thePlayer->getHealth()>=10.0f&&mc->thePlayer->getHealth()<100.0f)w=3;if(dynamic_cast<GuiInventory*>(sc))oY=70;else if(dynamic_cast<GuiContainerCreative*>(sc))oY=80;else if(dynamic_cast<GuiChest*>(sc))oY=static_cast<GuiChest*>(sc)->ySize/2-15;int x=s.getScaledWidth()/2-w;int y=s.getScaledHeight()/2+25+oY;auto c=blendColors({0.0f,0.5f,1.0f},{Color(255,37,0),Color(255,255,0),Color(0,255,0)},mc->thePlayer->getHealth()/mc->thePlayer->getMaxHealth());mc->fontRendererObj->drawString(ss.str(),aH>0.0f?static_cast<float>(x)-15.5f:static_cast<float>(x)-3.5f,y,c.getRGB(),true);glPushMatrix();mc->getTextureManager()->bindTexture(Gui::icons);r.seed(static_cast<long>(mc->ingameGUI->updateCounter)*312871L);float w_=static_cast<float>(s.getScaledWidth())/2.0f-mc->thePlayer->getMaxHealth()/2.5f*10.0f/2.0f;float mH=mc->thePlayer->getMaxHealth();int lPH=mc->ingameGUI->lastPlayerHealth;int hI=std::ceil(mc->thePlayer->getHealth());int l2=-1;bool f=mc->ingameGUI->healthUpdateCounter>static_cast<long>(mc->ingameGUI->updateCounter)&&(mc->ingameGUI->healthUpdateCounter-static_cast<long>(mc->ingameGUI->updateCounter))/3L%2L==1L;if(mc->thePlayer->isPotionActive(Potion::regeneration))l2=mc->ingameGUI->updateCounter%std::ceil(mH+5.0f);glColor4f(1.0f,1.0f,1.0f,1.0f);for(int i6=std::ceil(mH/2.0f)-1;i6>=0;--i6){int xO=16;if(mc->thePlayer->isPotionActive(Potion::poison))xO+=36;else if(mc->thePlayer->isPotionActive(Potion::wither))xO+=72;int k3=f?1:0;float rX=w_+static_cast<float>(i6%10*8);float rY=static_cast<float>(s.getScaledHeight())/2.0f+15.0f+static_cast<float>(oY);if(hI<=4)rY+=static_cast<float>(r()%2);if(i6==l2)rY-=2.0f;int yO=mc->theWorld->getWorldInfo()->isHardcoreModeEnabled()?5:0;Gui::drawTexturedModalRect(rX,rY,16+k3*9,9*yO,9,9);if(f){if(i6*2+1<lPH)Gui::drawTexturedModalRect(rX,rY,xO+54,9*yO,9,9);if(i6*2+1==lPH)Gui::drawTexturedModalRect(rX,rY,xO+63,9*yO,9,9);}if(i6*2+1<hI)Gui::drawTexturedModalRect(rX,rY,xO+36,9*yO,9,9);if(i6*2+1!=hI)continue;Gui::drawTexturedModalRect(rX,rY,xO+45,9*yO,9,9);}glPopMatrix();}Color blendColors(const std::vector<float>& keys,const std::vector<Color>& colors,float value){return colors[0];}};class Minecraft{public:class Screen* cs;class Player* tp;class FontRenderer* fro;class TextureManager* getTextureManager(){return nullptr;}class IngameGUI* ig;class World* tw;};class ScaledResolution{public:ScaledResolution(Minecraft* mc){}int getScaledWidth()const{return 800;}int getScaledHeight()const{return 600;}};class GuiInventory{};class GuiChest{int ySize;};class GuiContainerCreative{};class Player{public:float getHealth()const{return 20.0f;}float getMaxHealth()const{return 20.0f;}float getAbsorptionAmount()const{return 0.0f;}bool isPotionActive(int potion)const{return false;}};class FontRenderer{public:void drawString(const std::string& text,float x,float y,int color,bool shadow){}};class TextureManager{};class IngameGUI{public:long uc;long hc;int lPH;};class World{public:class WorldInfo* getWorldInfo(){return nullptr;}};class WorldInfo{public:bool isHardcoreModeEnabled()const{return false;}};class Potion{public:static const int reg=0;static const int poi=1;static const int wit=2;};class Color{public:int r,g,b;Color(int r,int g,int b):r(r),g(g),b(b){}int getRGB()const{return (r<<16)|(g<<8)|b;}};class Gui{public:static void drawTexturedModalRect(float x,float y,int u,int v,int width,int height){}};Minecraft* mc=new Minecraft();int main(){Health health;health.onRenderGuiEvent();health.onRender2DEvent();return 0;}
