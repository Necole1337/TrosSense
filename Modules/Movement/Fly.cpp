#include "Fly.h" struct Il1 { Il1() : Il2(Il3::Il4, "Il5") {} ~Il1() {} const char *Il6(bool) { return "Il7"; } void Il8(Il9 *IlA) { IlB *IlC = IlD->IlE(); IlF IlG = { IlA->IlH(), -IlA->IlI() }; if (sqrt(pow(IlG.x, 2) + pow(IlG.y, 2)) > 0.01) { float IlJ = (IlC->IlK() + 90) * (3.1415926 / 180); float IlL = cos(IlJ); float IlM = sin(IlJ); IlG = { IlG.x * IlL - IlG.y * IlM, IlG.x * IlM + IlG.y * IlL }; IlB *IlN = IlC->IlO(); IlN->x = IlG.x * IlP; IlN->y = 0; IlN->z = IlG.y * IlP; if (IlA->IlQ()) { IlN->y = 1; } IlC->IlR(IlN); } } void IlS(IlB *IlT) { IlB *IlU = IlT->IlO(); IlU->x = 0; IlU->y = 0.01745f; IlU->z = 0; IlT->IlR(IlU); } };
